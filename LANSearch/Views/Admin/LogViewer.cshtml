@using System.Collections.Generic
@{
    Layout = "Master/Master";
    ViewBag.Title = "Admin .:. LogViewer";
}
<div class="col-xs-12 content">
    <h1>LANSearch Log viewer</h1>
    <ul class="nav nav-tabs" role="tablist" id="tabs">
        <li class="active" data-tabid="tabLog"><a href="#">System Log</a></li>
        <li data-tabid="tabRequests"><a href="#">Requests</a></li>
    </ul>
    <div id="tabContainer">
        <div id="tabLog" class="panel panel-default">
            <div class="panel-heading">
                <div class="btn-group">
                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown"><span id="lblLevel">Info</span>&nbsp;<span class="caret"></span></button>
                    <ul class="dropdown-menu" id="ddmLevel">
                        <li><a href="#" data-level="0">Trace</a></li>
                        <li><a href="#" data-level="1">Debug</a></li>
                        <li><a href="#" data-level="2">Info</a></li>
                        <li><a href="#" data-level="3">Warning</a></li>
                        <li><a href="#" data-level="4">Error</a></li>
                        <li><a href="#" data-level="5">Fatal</a></li>
                    </ul>
                </div>
            </div>
            <div class="panel-body">
            </div>
        </div>
        <div id="tabRequests" class="panel panel-default" style="display:none;">
            <div class="panel-body"></div>
        </div>
        <ul id="discussion"></ul>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        $(function() {
            var tabs = $("#tabContainer").children();
            $("#tabs").on("click", "a", function(e) {
                var target = $(e.target);
                var li = target.parent();
                $(e.delegateTarget).children("li").removeClass("active");
                li.addClass("active");
                target.blur();
                var tab = "#" + li.data("tabid");
                tabs.hide();
                $(tab).show();
                return false;
            });
            var logLevels = ["Trace", "Debug", "Info", "Warn", "Error", "Fatal"];
            var logLevelColors = ["default", "default", "info", "warning", "danger", "danger"];
            var lblLevel = $("#lblLevel");
            var btnLevels = lblLevel.parent();
            var loglevel = 2;
            $("#ddmLevel").on("click", "a", function(e) {
                var target = $(e.target);
                loglevel = target.data("level");
                lblLevel.text(logLevels[loglevel]);
                btnLevels.removeClass("btn-default btn-info btn-warning btn-danger");
                btnLevels.addClass("btn-" + logLevelColors[loglevel]);
                target.parents(".btn-group").removeClass("open");
                return false;
            });

            function htmlEncode(value) {
                //create a in-memory div, set it's inner text(which jQuery automatically encodes)
                //then grab the encoded contents back out.  The div never exists on the page.
                return $('<div />').text(value).html();
            }

            var connection = $.hubConnection("/sr", { useDefaultPath: false });
            var logHub = connection.createHubProxy('logHub');
            var logEventDiv = $("#tabLog .panel-body");
            var eventsLimit = 500;
            var eventCount = 0;
            logHub.on("logEvent", function(datetime, logLevel, classname, message) {
                var logLevelId = logLevels.indexOf(logLevel);
                if (logLevelId < loglevel)
                    return;

                eventCount++;
                if (eventCount > eventsLimit) {
                    logEventDiv.children().last().remove();
                }

                logEventDiv.prepend('<div class="row small"><div class="col-xs-2">' + htmlEncode(datetime) + '</div>' +
                    '<span class="label label-' + logLevelColors[logLevelId] + ' col-xs-1">' + htmlEncode(logLevel) + '</span>' +
                    '<div class="col-xs-3">' + htmlEncode(classname) + '</div>' +
                    '<div class="col-xs-6">' + htmlEncode(message) + '</div></div>');
            });
            var logRequestDiv = $("#tabRequests .panel-body");
            var requestLimit = 500;
            var requestCount = 0;
            logHub.on('logReuqest', function(datetime, message) {
                requestCount++;
                if (requestCount > requestLimit) {
                    logRequestDiv.children().last().remove();
                }
                logRequestDiv.prepend('<div class="row small"><div class="col-xs-2">' + htmlEncode(datetime) + '</div><div class="col-xs-10">' + htmlEncode(message) + '</div></div>');
            });

            logHub.on('getLastEvents', function(entries) {
                if (entries.length) {
                    $.each(entries, function (index, value) {
                        var logLevelId = logLevels.indexOf(value.logLevel);
                        logEventDiv.append('<div class="row small"><div class="col-xs-2">' + htmlEncode(value.date) + '</div>' +
                            '<span class="label label-' + logLevelColors[logLevelId] + ' col-xs-1">' + htmlEncode(value.logLevel) + '</span>' +
                            '<div class="col-xs-3">' + htmlEncode(value.callsite) + '</div>' +
                            '<div class="col-xs-6">' + htmlEncode(value.message) + '</div></div>');
                    });
                }

                logHub.invoke('getLastRequests');
            });

            logHub.on('getLastRequests', function (entries) {
                if (entries.length) {
                    $.each(entries, function (index, value) {
                        logRequestDiv.prepend('<div class="row small"><div class="col-xs-2">' + htmlEncode(value.date) + '</div><div class="col-xs-10">' + htmlEncode(value.message) + '</div></div>');
                    });
                }
            });
            connection.start()
                .done(function() {
                    logHub.invoke('getLastEvents');
            });

        });
    </script>
}